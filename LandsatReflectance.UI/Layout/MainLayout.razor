@using LandsatReflectance.UI.Services
@inherits LayoutComponentBase
@inject UserInterfaceService UserInterfaceService

<MudThemeProvider Theme="@UserInterfaceService.MudTheme" IsDarkMode="UserInterfaceService.IsDarkMode"/>
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page mud-layout">
     <main>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
                <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
                
                <MudSpacer/>
                
                <MudNavLink Href="/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AccountCircle"/>
                <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
            </MudAppBar>
            <MudDrawer @bind-Open="m_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <NavMenu/>
            </MudDrawer>
            <MudMainContent Class="mt-16 pa-4">
                @Body
            </MudMainContent>
        </MudLayout>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool m_drawerOpen = false;
    
    
    private void DrawerToggle()
    {
        m_drawerOpen = !m_drawerOpen;
    }

    private void DarkModeToggle()
    {
        UserInterfaceService.IsDarkMode = !UserInterfaceService.IsDarkMode;
    }

    public string DarkLightModeButtonIcon =>
        UserInterfaceService.IsDarkMode switch
        {
            true => Icons.Material.Rounded.AutoMode,
            false => Icons.Material.Outlined.DarkMode,
        };
}
